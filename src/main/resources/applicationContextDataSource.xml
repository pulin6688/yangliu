<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd 
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd">
	
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="${datasource.master.driverClassName}" />
		<property name="url" value="${datasource.master.url}" />
		<property name="username" value="${datasource.master.username}" />
		<property name="password" value="${datasource.master.password}" />
		<!-- 连接池启动时的初始值 -->
		<property name="initialSize" value="${datasource.master.initialSize}" />
		<!-- 连接池的最大值 -->
		<property name="maxTotal" value="${datasource.master.maxTotal}" />
		<!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
		<property name="maxIdle" value="${datasource.master.maxIdle}" />
		<!-- 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
		<property name="minIdle" value="${datasource.master.minIdle}" />
		<!--#给出一条简单的sql语句进行验证 -->
		<property name="validationQuery" value="${datasource.master.validationQuery}" />
		<property name="testOnBorrow" value="${datasource.master.testOnBorrow}" />
		<property name="testWhileIdle" value="${datasource.master.testWhileIdle}" />
		<!--#在取出连接时进行有效验证 -->
		<property name="removeAbandonedOnBorrow" value="${datasource.master.removeAbandonedOnBorrow}" />
		<property name="removeAbandonedTimeout" value="${datasource.master.removeAbandonedTimeout}" />
		<!-- #运行判断连接超时任务的时间间隔，单位为毫秒，默认为-1，即不执行任务。 -->
		<property name="timeBetweenEvictionRunsMillis" value="${datasource.master.timeBetweenEvictionRunsMillis}" />
	</bean>
    
    <!-- jdbc注入 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>
	
	<!-- 事务管理器配置 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
    


</beans>